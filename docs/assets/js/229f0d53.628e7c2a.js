"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[994],{767:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var a=n(8427),r=n(4397),i=(n(2784),n(876)),o=["components"],l={sidebar_position:1,sidebar_label:"The producer function"},s="The producer function",p={unversionedId:"api/producer-function",id:"api/producer-function",title:"The producer function",description:"What is a producer function?",source:"@site/docs/api/1-producer-function.md",sourceDirName:"api",slug:"/api/producer-function",permalink:"/react-async-states/docs/api/producer-function",draft:!1,editUrl:"https://github.com/incepter/react-async-states/edit/main/packages/docs/docs/api/1-producer-function.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"The producer function"},sidebar:"tutorialSidebar",previous:{title:"Advanced usage",permalink:"/react-async-states/docs/tutorial/advanced-usage"},next:{title:"Create source",permalink:"/react-async-states/docs/api/create-source"}},u={},d=[{value:"What is a producer function?",id:"what-is-a-producer-function",level:2},{value:"What do you need with the producer ?",id:"what-do-you-need-with-the-producer-",level:3},{value:"Producer <code>props</code>:",id:"producer-props",level:2},{value:"<code>payload</code>",id:"payload",level:3},{value:"<code>lastSuccess</code>",id:"lastsuccess",level:3},{value:"<code>args</code>",id:"args",level:3},{value:"<code>isAborted</code>",id:"isaborted",level:3},{value:"<code>abort</code>",id:"abort",level:3},{value:"<code>onAbort</code>",id:"onabort",level:3},{value:"Run from producer: <code>Producer effects</code>",id:"run-from-producer-producer-effects",level:2},{value:"<code>props.run</code>",id:"propsrun",level:3},{value:"<code>props.runp</code>",id:"propsrunp",level:3},{value:"<code>props.emit</code>",id:"propsemit",level:3},{value:"<code>props.select</code>",id:"propsselect",level:3}],c={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"the-producer-function"},"The producer function"),(0,i.kt)("h2",{id:"what-is-a-producer-function"},"What is a producer function?"),(0,i.kt)("p",null,"The producer function is the function that returns the state's value,\nhere is its declaration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export type Producer<T> = ((props: ProducerProps<T>) => (T | Promise<T> | Generator<any, T, any>));\n")),(0,i.kt)("p",null,"So it can be:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A regular function returning a value."),(0,i.kt)("li",{parentName:"ul"},"A pure function returning a value based on the previous value (aka reducer)."),(0,i.kt)("li",{parentName:"ul"},"A generator (must return the state value)."),(0,i.kt)("li",{parentName:"ul"},"An asynchronous function using ",(0,i.kt)("inlineCode",{parentName:"li"},"async/await"),"."),(0,i.kt)("li",{parentName:"ul"},"A regular function returning a ",(0,i.kt)("inlineCode",{parentName:"li"},"Promise")," object."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"undefined"),".")),(0,i.kt)("p",null,"The main goal and purpose is to ",(0,i.kt)("inlineCode",{parentName:"p"},"run")," your function,\nso it will receive a single argument like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// somewhere in the code, simplified:\nproducer({\n  lastSuccess,\n\n  args,\n  payload,\n\n  isAborted,\n  onAbort,\n  abort,\n\n\n  run,\n  runp,\n  emit,\n  \n  select\n});\n")),(0,i.kt)("p",null,"where:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"payload")),(0,i.kt)("td",{parentName:"tr",align:null},"The merged payload from provider and all subscribers. This allows the producer to gather data from multiple places.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"lastSuccess")),(0,i.kt)("td",{parentName:"tr",align:null},"The last success state")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"args")),(0,i.kt)("td",{parentName:"tr",align:null},"The arguments that the ",(0,i.kt)("inlineCode",{parentName:"td"},"run")," function was given when ran")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"isAborted")),(0,i.kt)("td",{parentName:"tr",align:null},"A function returns a boolean indicating whether the current run has been cancelled (by dependency change, unmount or user action)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"abort")),(0,i.kt)("td",{parentName:"tr",align:null},"Imperatively abort the producer while processing it, this may be helpful only if you are working with generators")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"onAbort")),(0,i.kt)("td",{parentName:"tr",align:null},"Registers a callback that will be fired when the abort is invoked (like aborting a fetch request if the user aborts or component unmounts)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"run")),(0,i.kt)("td",{parentName:"tr",align:null},"runs an async state or a producer and returns the abort function of that run")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"runp")),(0,i.kt)("td",{parentName:"tr",align:null},"runs an async state or a producer and returns a promise of its state")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"emit")),(0,i.kt)("td",{parentName:"tr",align:null},"set the state from the producer after its resolve, this to support intervals and incoming events from an external system (like ws, sse...)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"select")),(0,i.kt)("td",{parentName:"tr",align:null},"returns the state of the desired async state, by key or source")))),(0,i.kt)("p",null,"We believe that these properties will solve all sort of possible use cases.\nIn fact, your function will run while having access to payload from the render,\nfrom either the provider and subscriptions, and can be merged imperatively anytime\nusing ",(0,i.kt)("inlineCode",{parentName:"p"},"mergePayload")," obtained from ",(0,i.kt)("inlineCode",{parentName:"p"},"useAsyncstate")," and also execution args if\nyou run it manually (not automatic)."),(0,i.kt)("p",null,"So basically you have three entry-points to your function (provider + subscription + exec args)."),(0,i.kt)("p",null,"Your function will be notified with the cancellation by registering an ",(0,i.kt)("inlineCode",{parentName:"p"},"onAbort"),"\ncallback, you can exploit this to abort an ",(0,i.kt)("inlineCode",{parentName:"p"},"AbortController")," which will lead\nyour fetches to be cancelled, or to clear a timeout, for example."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"isAborted")," function that returns a boolean that's truthy if this current run is aborted,\nyou may want to use it before calling a callback received from payload or\nexecution arguments. If using a generator, only yielding is sufficient, since the\nlibrary internally checks on cancellation before stepping any further in the generator."),(0,i.kt)("p",null,"The following functions are all supported by the library:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// retrives current user, his permissions and allowed stores before resolving\nfunction* getCurrentUser(props) {\n  const controller = new AbortController();\n  const {signal} = controller;\n  props.onAbort(function abortFetch() {\n    controller.abort();\n  });\n\n  const userData = yield fetchCurrentUser({signal});\n  const [permissions, stores] = yield Promise.all([\n    fetchUserPermissions(userData.id, {signal}),\n    fetchUserStores(userData.id, {signal}),\n  ]);\n\n  return {\n    stores,\n    permissions,\n    user: userData,\n  };\n}\n\nasync function getCurrentUserPosts(props) {\n  // [...] abort logic\n  return await fetchUserPosts(props.payload.principal.id, {signal});\n}\n\nasync function getTransactionsList(props) {\n  // abort logic\n  return await fetchUserTransactions(props.payload.principal.id, {query: props.payload.queryString, signal});\n}\n\nfunction timeout(props) {\n  let timeoutId;\n  props.onAbort(function clear() {\n    clearTimeout(timeoutId);\n  });\n\n  return new Promise(function resolver(resolve) {\n    const callback = () => resolve(invokeIfPresent(props.payload.callback));\n    timeoutId = setTimeout(callback, props.payload.delay);\n  });\n}\n\nfunction reducer(props) {\n  const action = props.args[0];\n  switch(action.type) {\n    case type1: return {...props.lastSuccess.data, ...action.newData};\n    case type2: return {...action.data};\n    \n    // mixed sync and async reducers is possible\n    // case type3: return fetchSomething()\n  }\n}\n")),(0,i.kt)("p",null,"You can even omit the producer function, it was supported along the with the ",(0,i.kt)("inlineCode",{parentName:"p"},"replaceState")," API that we will see later.\nIf you attempt to run it, it will delegate to replaceState while passing the arguments."),(0,i.kt)("h3",{id:"what-do-you-need-with-the-producer-"},"What do you need with the producer ?"),(0,i.kt)("p",null,"An AsyncState is an instance holding the state and wraps your producer function. "),(0,i.kt)("p",null,"The following properties are needed when using a production function,\neither at module scope or via ",(0,i.kt)("inlineCode",{parentName:"p"},"useAsyncState"),":"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"key")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},"The unique identifier of the async state")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"producer")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"producer function")),(0,i.kt)("td",{parentName:"tr",align:null},"Returns the state value of type ",(0,i.kt)("inlineCode",{parentName:"td"},"T"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"configuration")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ProducerConfig")),(0,i.kt)("td",{parentName:"tr",align:null},"The argument object that the producer was ran with")))),(0,i.kt)("p",null,"The supported configuration is:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"initialValue")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:null},"The initial value or the initializer of the state (status = ",(0,i.kt)("inlineCode",{parentName:"td"},"initial"),")")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"runEffect")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"oneOf('debounce', 'throttle', undefined)")),(0,i.kt)("td",{parentName:"tr",align:null},"An effect to apply when running the producer, can be used to debounce or throttle")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"runEffectDurationMs")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"number > 0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The debounce/throttle duration")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"resetStateOnDispose")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:null},"Whether to reset the state to its initial state when all subscribers unsubscribe or to keep it. Default to ",(0,i.kt)("inlineCode",{parentName:"td"},"true"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"skipPendingDelayMs")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"number > 0")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"The duration under which a state update with a pending status may be skipped. The component in this case won't render with a pending status if it gets updated to something else under that duration.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"cacheConfig")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"CacheConfig")),(0,i.kt)("td",{parentName:"tr",align:null},"The cache config")))),(0,i.kt)("p",null,"Where the supported cache config is:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"enabled")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:null},"Whether to enable cache or not")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"hash")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(args?: any[], payload?: {[id: string]: any} or null) => string")),(0,i.kt)("td",{parentName:"tr",align:null},"a function to calculate a hash for a producer run (from args and payload)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"getDeadline")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(currentState: State<T>) => number")),(0,i.kt)("td",{parentName:"tr",align:null},"returns the deadline after which the cache is invalid")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"load")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"() => {[id: AsyncStateKey]: CachedState<T>}")),(0,i.kt)("td",{parentName:"tr",align:null},"loads the cached data when the async state instance is created")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"persist")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(cache: {[id: AsyncStateKey]: CachedState<T>}) => void")),(0,i.kt)("td",{parentName:"tr",align:null},"a function to persist the whole cache, called when state is updated to success")))),(0,i.kt)("p",null,"Here is a small example of the usage of cache config:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'  // Creates a producer that will fetch cities by country\n  // and caches them\n  createSource("cities", citiesProducer, {\n    cacheConfig: {\n      enabled: true,\n      hash: (args, payload) =>  `cities-${args[0]}`, // args[0] = countryId\n      getDeadline: (state) => state.data.headers.expiresAt || 5000,\n      load: () => JSON.parse(localStorage.getItem("cities-cache")),\n      persist : cache => localStorage.setItem("cities-cache", JSON.stringify(cache)),\n    }\n  });\n\n  const posts = {\n    key: "posts",\n    producer: postsProducer,\n    config: {\n      cacheConfig: {\n        enabled: true, getDeadline: () => 50000,\n        hash: (args, payload) => "posts",\n        load: () => JSON.parse(localStorage.getItem("posts-cache")),\n        persist: cache => localStorage.setItem("posts-cache", JSON.stringify(cache)),\n      }\n    }\n  };\n')),(0,i.kt)("h2",{id:"producer-props"},"Producer ",(0,i.kt)("inlineCode",{parentName:"h2"},"props"),":"),(0,i.kt)("p",null,"The producer receives a single argument (called either ",(0,i.kt)("inlineCode",{parentName:"p"},"props")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"argv"),")."),(0,i.kt)("h3",{id:"payload"},(0,i.kt)("inlineCode",{parentName:"h3"},"payload")),(0,i.kt)("p",null,"The payload is gathered from the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"from ",(0,i.kt)("inlineCode",{parentName:"li"},"AsyncStateProvider")," if inside it"),(0,i.kt)("li",{parentName:"ul"},"from all subscribers",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Either from ",(0,i.kt)("inlineCode",{parentName:"li"},"useAsyncState")," configuration object"),(0,i.kt)("li",{parentName:"ul"},"Or from ",(0,i.kt)("inlineCode",{parentName:"li"},"useAsyncState().mergePayload({...})"))))),(0,i.kt)("p",null,"So it gives the producer the power of grabbing something from the provider,\nor from a static context or even from the render phase or event handlers."),(0,i.kt)("h3",{id:"lastsuccess"},(0,i.kt)("inlineCode",{parentName:"h3"},"lastSuccess")),(0,i.kt)("p",null,"This represents the last success ",(0,i.kt)("inlineCode",{parentName:"p"},"State")," registered by the library."),(0,i.kt)("p",null,"This is useful to use ",(0,i.kt)("inlineCode",{parentName:"p"},"reducers")," by the library or if you want to append\nthe last data with the new one (like infinite list etc)"),(0,i.kt)("h3",{id:"args"},(0,i.kt)("inlineCode",{parentName:"h3"},"args")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"args")," property is array of ",(0,i.kt)("inlineCode",{parentName:"p"},"arguments")," that the ",(0,i.kt)("inlineCode",{parentName:"p"},"run")," function received\nwhen invoked."),(0,i.kt)("h3",{id:"isaborted"},(0,i.kt)("inlineCode",{parentName:"h3"},"isAborted")),(0,i.kt)("p",null,"A function returning a boolean indicating whether this run was aborted and not\nrelevant anymore (dependencies change/unmount)."),(0,i.kt)("h3",{id:"abort"},(0,i.kt)("inlineCode",{parentName:"h3"},"abort")),(0,i.kt)("p",null,"The same as ",(0,i.kt)("inlineCode",{parentName:"p"},"useAsyncState().abort")," function. Its goal is to mark the current\nrun as aborted (also invokes registered abort callbacks)."),(0,i.kt)("h3",{id:"onabort"},(0,i.kt)("inlineCode",{parentName:"h3"},"onAbort")),(0,i.kt)("p",null,"This allows the producer to be notified when the run is being aborted."),(0,i.kt)("p",null,"This can be used for all types of asynchronous cancellations:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Cancel fetch requests"),(0,i.kt)("li",{parentName:"ul"},"Cancel timeouts and intervals"),(0,i.kt)("li",{parentName:"ul"},"Cancel workers ..")),(0,i.kt)("h2",{id:"run-from-producer-producer-effects"},"Run from producer: ",(0,i.kt)("inlineCode",{parentName:"h2"},"Producer effects")),(0,i.kt)("p",null,"The producer function may select a state or run another, and either\ncare about its resolve value or not (same applies for the abort fn)."),(0,i.kt)("p",null,"This open us new horizons for the library as you can combine these features\nfor a more control in your app. "),(0,i.kt)("h3",{id:"propsrun"},(0,i.kt)("inlineCode",{parentName:"h3"},"props.run")),(0,i.kt)("p",null,"This function runs the given producer/async state. It can run:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"Source")," object"),(0,i.kt)("li",{parentName:"ul"},"A plain ",(0,i.kt)("inlineCode",{parentName:"li"},"Producer")),(0,i.kt)("li",{parentName:"ul"},"If inside provider, any state by ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," key.")),(0,i.kt)("p",null,"This function returns the ",(0,i.kt)("inlineCode",{parentName:"p"},"AbortFn")," of the execution, so it can be chained and\nregistered via ",(0,i.kt)("inlineCode",{parentName:"p"},"props.onAbort(props.run(...))")," for cascading cancellations."),(0,i.kt)("p",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"run: <T>(input: ProducerPropsRunInput<T>, config: ProducerPropsRunConfig | null, ...args: any[] ) => AbortFn\n")),(0,i.kt)("p",null,"Where:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ProducerPropsRunInput")," may be a string (if inside provider), a source object,\nor a producer."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ProducerPropsRunConfig")," a configuration object:")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Prop"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default value"),(0,i.kt)("th",{parentName:"tr",align:null},"Usage"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"lane")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"Describes the ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/use-async-state#lane"},"lane")," that will be ran")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"fork")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"fork")," is only relevant working with source or by a string key")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"payload")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"{ [id: string]: any }")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"null")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"payload")," is only relevant (for now) when passing a producer function")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"...args"),", the ",(0,i.kt)("inlineCode",{parentName:"li"},"props.args")," of the resulting running producer.")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"props.run")," function returns its ",(0,i.kt)("inlineCode",{parentName:"p"},"AbortFn"),", so you can register it (if you care)\nin ",(0,i.kt)("inlineCode",{parentName:"p"},"props.onAbort(props.run(...))"),"."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Running an async state by key or source or key will result in an update to\nall its subscribers."))),(0,i.kt)("h3",{id:"propsrunp"},(0,i.kt)("inlineCode",{parentName:"h3"},"props.runp")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"props.runp")," is similar to ",(0,i.kt)("inlineCode",{parentName:"p"},"props.run"),", but rather than returning the abort\nfunction, it will return a ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise")," of the resulting state so you can wait it\nin the caller producer."),(0,i.kt)("p",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"runp: <T>(input: ProducerPropsRunInput<T>, config: ProducerPropsRunConfig | null, ...args: any[] ) => Promise<State<T>> | undefined\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"async function weatherProducer(props) {\n  const location = await props.runp(fetchCurrentLocationProducer);\n  const weather = await props.runp(fetchWeather, null, location.data);\n  props.run(sendUsageDataProducer, null, {weather, location}); // <- props.run\n  return {weather, location};\n}\n\n")),(0,i.kt)("h3",{id:"propsemit"},(0,i.kt)("inlineCode",{parentName:"h3"},"props.emit")),(0,i.kt)("p",null,"The emit function changes the state from the producer, but only works after the\nproducer resolves (or else you get a warning, without effect)."),(0,i.kt)("p",null,"It was built to support subscriptions from the producer, to websocket and/or workers"),(0,i.kt)("p",null,"Its signature is the same as useAsyncState's ",(0,i.kt)("inlineCode",{parentName:"p"},"replaceState"),". It changes the state\ninstantly and imperatively to the desired value."),(0,i.kt)("p",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"emit: (updater: T | StateFunctionUpdater<T>, status: AsyncStateStatus) => void\n")),(0,i.kt)("p",null,"This feature allows the following easily:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// this is a producer that updates each second\n// Why adding an onAbort even if the producer itself is synchronous ?\n// The abort functions are garanteed to be run, if it is aborted, or the next time you run\n// or when you call abort directly\nfunction intervalProducer(props) {\n  let intervalId = setInterval(() => props.emit(old => old.data + 1), 1000);\n  props.onAbort(() => clearInterval(intervalId));\n  return props.args[0] ?? 0;\n}\n")),(0,i.kt)("p",null,"And this is what it takes to implement a websocket gateway in your client application"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'function brokerProducer(props) {\n  return new Promise((resolve, reject) => {\n    const ws = new WebSocket("ws://localhost:9091");\n    ws.addEventListener("error", (message) => {\n      reject({connected: false, error: message}); // <- first fulfillement with a rejection\n    });\n    ws.addEventListener("open", () => {\n      resolve({ws, connected: true}); // <- first resolve, props.emit doesn\'t work until this is called\n    });\n    ws.addEventListener("close", message => {\n      props.emit(message, "error"); // <- transition to error state \n    });\n    ws.addEventListener("message", (message) => {\n      const jsonData = JSON.parse(message.data);\n      const {to} = jsonData;\n      if (to) {\n        props.run(to, null, jsonData); // run another producer with the received message\n      }\n    });\n    props.onAbort(() => ws.close());\n  });\n}\n')),(0,i.kt)("h3",{id:"propsselect"},(0,i.kt)("inlineCode",{parentName:"h3"},"props.select")),(0,i.kt)("p",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"select: <T>(input: AsyncStateKeyOrSource<T>) => State<T> | undefined\n")),(0,i.kt)("p",null,"Simply decodes your source object, or retrieves your async state from the provider\n(if inside any) and gives you its actual state, a pure read mode, no subscription."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The props runners scope is cascaded:"),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"If you run a producer from inside an async state provider,\n",(0,i.kt)("inlineCode",{parentName:"li"},"props.run|runp|select")," will also be able to select from the provider,"),(0,i.kt)("li",{parentName:"ul"},"and all cascading calls will be granted the same power."),(0,i.kt)("li",{parentName:"ul"},"If you run from outside the context provider, your producers will only be able\nto run a source object or a bare producer function.")))))}m.isMDXComponent=!0},876:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(2784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,k=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return n?a.createElement(k,o(o({ref:t},u),{},{components:n})):a.createElement(k,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"}}]);